// Code generated by entc, DO NOT EDIT.

package khumuuser

const (
	// Label holds the string label denoting the khumuuser type in the database.
	Label = "khumu_user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "username"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldStudentNumber holds the string denoting the student_number field in the database.
	FieldStudentNumber = "student_number"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// EdgeComments holds the string denoting the comments edge name in mutations.
	EdgeComments = "comments"
	// EdgeArticles holds the string denoting the articles edge name in mutations.
	EdgeArticles = "articles"
	// EdgeLike holds the string denoting the like edge name in mutations.
	EdgeLike = "like"
	// CommentFieldID holds the string denoting the ID field of the Comment.
	CommentFieldID = "id"
	// ArticleFieldID holds the string denoting the ID field of the Article.
	ArticleFieldID = "id"
	// LikeCommentFieldID holds the string denoting the ID field of the LikeComment.
	LikeCommentFieldID = "id"
	// Table holds the table name of the khumuuser in the database.
	Table = "user_khumuuser"
	// CommentsTable is the table the holds the comments relation/edge.
	CommentsTable = "comment_comment"
	// CommentsInverseTable is the table name for the Comment entity.
	// It exists in this package in order to avoid circular dependency with the "comment" package.
	CommentsInverseTable = "comment_comment"
	// CommentsColumn is the table column denoting the comments relation/edge.
	CommentsColumn = "author_id"
	// ArticlesTable is the table the holds the articles relation/edge.
	ArticlesTable = "article_article"
	// ArticlesInverseTable is the table name for the Article entity.
	// It exists in this package in order to avoid circular dependency with the "article" package.
	ArticlesInverseTable = "article_article"
	// ArticlesColumn is the table column denoting the articles relation/edge.
	ArticlesColumn = "author_id"
	// LikeTable is the table the holds the like relation/edge.
	LikeTable = "comment_likecomment"
	// LikeInverseTable is the table name for the LikeComment entity.
	// It exists in this package in order to avoid circular dependency with the "likecomment" package.
	LikeInverseTable = "comment_likecomment"
	// LikeColumn is the table column denoting the like relation/edge.
	LikeColumn = "user_id"
)

// Columns holds all SQL columns for khumuuser fields.
var Columns = []string{
	FieldID,
	FieldNickname,
	FieldPassword,
	FieldStudentNumber,
	FieldIsActive,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
