// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticleArticleColumns holds the columns for the "article_article" table.
	ArticleArticleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "images", Type: field.TypeJSON},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "author_id", Type: field.TypeString, Nullable: true},
	}
	// ArticleArticleTable holds the schema information for the "article_article" table.
	ArticleArticleTable = &schema.Table{
		Name:       "article_article",
		Columns:    ArticleArticleColumns,
		PrimaryKey: []*schema.Column{ArticleArticleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_article_user_khumuuser_articles",
				Columns:    []*schema.Column{ArticleArticleColumns[4]},
				RefColumns: []*schema.Column{UserKhumuuserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BoardsColumns holds the columns for the "boards" table.
	BoardsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// BoardsTable holds the schema information for the "boards" table.
	BoardsTable = &schema.Table{
		Name:        "boards",
		Columns:     BoardsColumns,
		PrimaryKey:  []*schema.Column{BoardsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CommentCommentColumns holds the columns for the "comment_comment" table.
	CommentCommentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "state", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "kind", Type: field.TypeString, Default: "anonymous"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "article_id", Type: field.TypeInt, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
		{Name: "author_id", Type: field.TypeString, Nullable: true},
	}
	// CommentCommentTable holds the schema information for the "comment_comment" table.
	CommentCommentTable = &schema.Table{
		Name:       "comment_comment",
		Columns:    CommentCommentColumns,
		PrimaryKey: []*schema.Column{CommentCommentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comment_comment_article_article_comments",
				Columns:    []*schema.Column{CommentCommentColumns[5]},
				RefColumns: []*schema.Column{ArticleArticleColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comment_comment_comment_comment_children",
				Columns:    []*schema.Column{CommentCommentColumns[6]},
				RefColumns: []*schema.Column{CommentCommentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comment_comment_user_khumuuser_comments",
				Columns:    []*schema.Column{CommentCommentColumns[7]},
				RefColumns: []*schema.Column{UserKhumuuserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserKhumuuserColumns holds the columns for the "user_khumuuser" table.
	UserKhumuuserColumns = []*schema.Column{
		{Name: "username", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "student_number", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool},
	}
	// UserKhumuuserTable holds the schema information for the "user_khumuuser" table.
	UserKhumuuserTable = &schema.Table{
		Name:        "user_khumuuser",
		Columns:     UserKhumuuserColumns,
		PrimaryKey:  []*schema.Column{UserKhumuuserColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticleArticleTable,
		BoardsTable,
		CommentCommentTable,
		UserKhumuuserTable,
	}
)

func init() {
	ArticleArticleTable.ForeignKeys[0].RefTable = UserKhumuuserTable
	ArticleArticleTable.Annotation = &entsql.Annotation{
		Table: "article_article",
	}
	CommentCommentTable.ForeignKeys[0].RefTable = ArticleArticleTable
	CommentCommentTable.ForeignKeys[1].RefTable = CommentCommentTable
	CommentCommentTable.ForeignKeys[2].RefTable = UserKhumuuserTable
	CommentCommentTable.Annotation = &entsql.Annotation{
		Table: "comment_comment",
	}
	UserKhumuuserTable.Annotation = &entsql.Annotation{
		Table: "user_khumuuser",
	}
}
