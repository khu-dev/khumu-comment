// Code generated by MockGen. DO NOT EDIT.
// Source: external/awssns.go

// Package external is a generated GoMock package.
package external

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	data "github.com/khu-dev/khumu-comment/data"
)

// MockSnsClient is a mock of SnsClient interface.
type MockSnsClient struct {
	ctrl     *gomock.Controller
	recorder *MockSnsClientMockRecorder
}

// MockSnsClientMockRecorder is the mock recorder for MockSnsClient.
type MockSnsClientMockRecorder struct {
	mock *MockSnsClient
}

// NewMockSnsClient creates a new mock instance.
func NewMockSnsClient(ctrl *gomock.Controller) *MockSnsClient {
	mock := &MockSnsClient{ctrl: ctrl}
	mock.recorder = &MockSnsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnsClient) EXPECT() *MockSnsClientMockRecorder {
	return m.recorder
}

// PublishMessage mocks base method.
func (m *MockSnsClient) PublishMessage(comment *data.CommentOutput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishMessage", comment)
	ret0, _ := ret[0].(error)
	return ret0
}

// PublishMessage indicates an expected call of PublishMessage.
func (mr *MockSnsClientMockRecorder) PublishMessage(comment interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishMessage", reflect.TypeOf((*MockSnsClient)(nil).PublishMessage), comment)
}
